{"version": "1.1", "os": "windows", "packname": "ComplianceValidation", "queries": [{"name": "AppCompat", "description": "Check Applications opted in for DEP", "query": "select * from registry where key='HKEY_LOCAL_MACHINE\\SOFTWARE\\%Microsoft\\Windows NT\\CurrentVersion\\AppCompatFlags\\Layers'", "type": "validation"}, {"name": "App_ExecuteOptions", "description": "Check Applications opted in for DEP", "query": "select * from registry where key like 'HKEY_LOCAL_MACHINE\\SOFTWARE\\%Microsoft\\Windows NT\\CurrentVersion\\Image File Execution Options\\%\\executeOptions'", "type": "validation"}, {"name": "App_MitigationOptions", "description": "Check Applications opted in for DEP", "query": "select * from registry where key like 'HKEY_LOCAL_MACHINE\\SOFTWARE\\%Microsoft\\Windows NT\\CurrentVersion\\Image File Execution Options\\%\\MitigationOptions'", "type": "validation"}, {"name": "App_disabledExceptionChainValidation", "description": "Check Applications not supporting SEHOP", "query": "select * from registry where key like 'HKEY_LOCAL_MACHINE\\SOFTWARE\\%Microsoft\\Windows NT\\CurrentVersion\\Image File Execution Options\\%\\DisableExceptionChainValidation'", "type": "validation"}, {"name": "AuditSpecialGroups", "description": "Check Special Logon Audit configuration - https://blogs.technet.microsoft.com/jepayne/2015/11/26/tracking-lateral-movement-part-one-special-groups-and-specific-service-accounts/", "query": "select * from registry where key='HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\Lsa\\Audit'", "type": "validation"}, {"name": "ControlFlowGuard", "description": "Check Control Flow Guard state", "query": "select * from registry where key='HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\Session Manager\\Memory Management\\EnableCfg'", "type": "validation"}, {"name": "CwdIllegalInDllSearch", "description": "Check Secure Search Path state (https://support.microsoft.com/en-us/help/2264107/a-new-cwdillegalindllsearch-registry-entry-is-available-to-control-the)", "query": "select * from registry where key='HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\Session Manager\\CWDIllegalInDllSearch'", "type": "validation"}, {"name": "DefaultLevelMachine", "description": "Check Software Restriction Policies state", "query": "select * from registry where key='HKEY_LOCAL_MACHINE\\SOFTWARE\\Policies\\Microsoft\\Windows\\Safer\\CodeIdentifiers\\DefaultLevel'", "type": "validation"}, {"name": "DefaultLevelUser", "description": "Check Software Restriction Policies state", "query": "select * from registry where key like 'HKEY_USERS\\%\\SOFTWARE\\Policies\\Microsoft\\Windows\\Safer\\CodeIdentifiers\\DefaultLevel'", "type": "validation"}, {"name": "DepPolicy", "description": "Whether DEP is enabled", "query": "select * from registry where key='HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\SystemStartOptions'", "type": "validation"}, {"name": "DeveloperMode", "description": "Check Developer Mode state", "query": "select * from registry where key='HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\AppModelUnlock'", "type": "validation"}, {"name": "DisabledExceptionChainValidation", "description": "Check SEHOP state: DisabledExceptionChainValidation", "query": "select * from registry where key='HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\Session Manager\\kernel\\DisableExceptionChainValidation'", "type": "validation"}, {"name": "Disallowed", "description": "Check Software Restriction Policies state: No SRP deny list rules", "query": "select * from registry where key='HKEY_LOCAL_MACHINE\\SOFTWARE\\Policies\\Microsoft\\Windows\\Safer\\CodeIdentifiers\\0'", "type": "validation"}, {"name": "Disallowed_Paths", "description": "Check Software Restriction Policies state: No SRP path rules", "query": "select * from registry where key='HKEY_LOCAL_MACHINE\\SOFTWARE\\Policies\\Microsoft\\Windows\\Safer\\CodeIdentifiers\\0\\Paths'", "type": "validation"}, {"name": "Disallowed_Paths_ItemData", "description": "Check Software Restriction Policies state: SRP deny list rule is missing", "query": "select * from registry where key like 'HKEY_LOCAL_MACHINE\\SOFTWARE\\Policies\\Microsoft\\Windows\\Safer\\CodeIdentifiers\\0\\Paths\\%\\ItemData'", "type": "validation"}, {"name": "EnableCertPaddingCheck", "description": "Determine state of Certificate Padding (https://docs.microsoft.com/en-us/security-updates/securityadvisories/2014/2915720)", "query": "select * from registry where key='HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Cryptography\\WinTrust\\Config\\EnableCertPaddingCheck'", "type": "validation"}, {"name": "EnableCertPaddingCheck_wow64", "description": "Determine state of Certificate Padding (https://docs.microsoft.com/en-us/security-updates/securityadvisories/2014/2915720)", "query": "select * from registry where key='HKEY_LOCAL_MACHINE\\SOFTWARE\\Wow6432Node\\Microsoft\\Cryptography\\WinTrust\\Config\\EnableCertPaddingCheck'", "type": "validation"}, {"name": "EnableLowVaAccess", "description": "Check Kernel Null page state", "query": "select * from registry where key='HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\Session Manager\\Memory Management\\EnableLowVaAccess'", "type": "validation"}, {"name": "ExecutableTryMachine", "description": "Check Software Restriction Policies state", "query": "select * from registry where key='HKEY_LOCAL_MACHINE\\SOFTWARE\\Policies\\Microsoft\\Windows\\Safer\\CodeIdentifiers\\ExecutableTry'", "type": "validation"}, {"name": "ExecutableTryUser", "description": "Check Software Restriction Policies state", "query": "select * from registry where key like 'HKEY_USERS\\%\\SOFTWARE\\Policies\\Microsoft\\Windows\\Safer\\CodeIdentifiers\\ExecutableTry'", "type": "validation"}, {"name": "FontBlocking", "description": "Whether FontBlocking is enabled", "query": "select * from registry where key='HKEY_LOCAL_MACHINE\\SOFTWARE\\Policies\\Microsoft\\Windows NT\\MitigationOptions\\MitigationOptions_FontBlocking'", "type": "validation"}, {"name": "KernelSehopEnabled", "description": "Whether SEHOP is enabled", "query": "select * from registry where key='HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\Session Manager\\Kernel\\KernelSEHOPEnabled'", "type": "validation"}, {"name": "MitigationOptions", "description": "Whether DEP is enabled with application mitigation options", "query": "select * from registry where key='HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\Session Manager\\Kernel\\MitigationOptions'", "type": "validation"}, {"name": "MoveImages", "description": "Check ASLR configuration", "query": "select * from registry where key='HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\Session Manager\\Memory Management\\moveImages'", "type": "validation"}, {"name": "OpenType_Font_Driver_Vulnerability", "description": "Determine if Adobe Type Manager Font Driver is disabled (https://technet.microsoft.com/en-us/library/security/ms15-078)", "query": "select * from registry where path like 'HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Windows\\%' AND name = 'DisableATMFD' AND data != '1';", "version": "2.2.1", "type": "validation"}, {"name": "PolicyScopeMachine", "description": "Check Software Restriction Policies state", "query": "select * from registry where key='HKEY_LOCAL_MACHINE\\SOFTWARE\\Policies\\Microsoft\\Windows\\Safer\\CodeIdentifiers\\PolicyScope'", "type": "validation"}, {"name": "PolicyScopeUser", "description": "Check Software Restriction Policies state", "query": "select * from registry where key like 'HKEY_USERS\\%\\SOFTWARE\\Policies\\Microsoft\\Windows\\Safer\\CodeIdentifiers\\PolicyScope'", "type": "validation"}, {"name": "Protecting_Against_Weak_Crypto_Algo", "description": "Determine if Windows is configured to log certificates with weak crypto (https://technet.microsoft.com/library/dn375961(v=ws.11).aspx)", "query": "select * from registry where path like 'HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Cryptography\\OID\\EncodingType 0\\CertDllCreateCertificateChainEngine\\Config\\Default\\%' AND name IN ('WeakSha1ThirdPartyFlags','WeakMd5ThirdPartyFlags') AND type = 'REG_DWORD' AND data not like '-2%';", "value": "Artifact used by this malware", "type": "validation"}, {"name": "AppLockerRule", "description": "Check Applocker rule set", "query": "select * from registry where key like 'HKEY_LOCAL_MACHINE\\SOFTWARE\\Policies\\Microsoft\\Windows\\SrpV2\\%\\%\\Value'", "type": "validation"}, {"name": "RuleSetEnforcementMode", "description": "Check Applocker rule set configuration", "query": "select * from registry where key like 'HKEY_LOCAL_MACHINE\\SOFTWARE\\Policies\\Microsoft\\Windows\\SrpV2\\%\\EnforcementMode'", "type": "validation"}, {"name": "SaferFlags", "description": "Check Software Restriction Policies state: SRP rule is not enforcing", "query": "select * from registry where key like 'HKEY_LOCAL_MACHINE\\SOFTWARE\\Policies\\Microsoft\\Windows\\Safer\\CodeIdentifiers\\%\\%\\%\\SaferFlags'", "type": "validation"}, {"name": "SecureBoot", "description": "Whether Secureboot is enabled", "query": "select * from registry where key='HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\SecureBoot\\State\\UEFISecureBootEnabled'", "type": "validation"}, {"name": "SysmonConfig", "description": "Check Microsoft Sysinternals Sysmon config", "query": "select * from registry where key='HKEY_LOCAL_MACHINE\\SYSTEM\\CCS\\Services\\SysmonDrv\\Parameters'", "type": "validation"}, {"name": "TransparentEnabledMachine", "description": "Check Software Restriction Policies state", "query": "select * from registry where key='HKEY_LOCAL_MACHINE\\SOFTWARE\\Policies\\Microsoft\\Windows\\Safer\\CodeIdentifiers\\TransparentEnabled'", "type": "validation"}, {"name": "TransparentEnabledUser", "description": "Check Software Restriction Policies state", "query": "select * from registry where key like 'HKEY_USERS\\%\\SOFTWARE\\Policies\\Microsoft\\Windows\\Safer\\CodeIdentifiers\\TransparentEnabled'", "type": "validation"}, {"name": "UAC_Disabled", "description": "Controls UAC. A setting of 0 indicates that UAC is disabled.", "query": "SELECT * FROM registry WHERE path='HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\Policies\\System\\EnableLUA' AND data=0;", "version": "2.2.1", "type": "validation"}, {"name": "Unrestricted", "description": "Check Software Restriction Policies state: No SRP allow list rules", "query": "select * from registry where key='HKEY_LOCAL_MACHINE\\SOFTWARE\\Policies\\Microsoft\\Windows\\Safer\\CodeIdentifiers\\262144'", "type": "validation"}, {"name": "Unrestricted_Paths", "description": "Check Software Restriction Policies state: No SRP path rules", "query": "select * from registry where key='HKEY_LOCAL_MACHINE\\SOFTWARE\\Policies\\Microsoft\\Windows\\Safer\\CodeIdentifiers\\262144\\Paths'", "type": "validation"}, {"name": "Unrestricted_Paths_ItemData", "description": "Check Software Restriction Policies state: SRP allow list rules is missing", "query": "select * from registry where key like 'HKEY_LOCAL_MACHINE\\SOFTWARE\\Policies\\Microsoft\\Windows\\Safer\\CodeIdentifiers\\262144\\Paths\\%\\ItemData'", "type": "validation"}]}